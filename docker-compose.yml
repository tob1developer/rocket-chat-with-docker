version: "3.7"

volumes:
  mongodb_data:
    driver: local

services:
  rocketchat:
    image: registry.rocket.chat/rocketchat/rocket.chat:${RELEASE}
    restart: on-failure
    labels:
      traefik.enable: "true"
      traefik.http.routers.rocketchat.rule: Host(`${DOMAIN}`)
      traefik.http.routers.rocketchat.tls: "true"
      traefik.http.routers.rocketchat.entrypoints: http
      traefik.http.routers.rocketchat.tls.certresolver: le
    environment:
      MONGO_URL: ${MONGO_URL}
      MONGO_OPLOG_URL: ${MONGO_URL}
      ROOT_URL: "http://${DOMAIN}:${HOST_PORT}"
      PORT: ${PORT}
      DEPLOY_METHOD: docker
    depends_on:
      - mongodb
    expose:
      - ${PORT:-3000}
    ports:
      - ${DOMAIN}:${HOST_PORT}:${PORT}
  mongodb:
    image: docker.io/bitnami/mongodb:${MONGODB_VERSION}
    restart: on-failure
    volumes:
      - mongodb_data:/bitnami/mongodb
    environment:
      MONGODB_REPLICA_SET_MODE: primary
      MONGODB_REPLICA_SET_NAME: ${MONGODB_REPLICA_SET_NAME}
      MONGODB_PORT_NUMBER: ${MONGODB_PORT_NUMBER}
      MONGODB_INITIAL_PRIMARY_HOST: ${MONGODB_INITIAL_PRIMARY_HOST}
      MONGODB_INITIAL_PRIMARY_PORT_NUMBER: ${MONGODB_INITIAL_PRIMARY_PORT_NUMBER}
      MONGODB_ADVERTISED_HOSTNAME: ${MONGODB_ADVERTISED_HOSTNAME}
      MONGODB_ENABLE_JOURNAL: ${MONGODB_ENABLE_JOURNAL}
      ALLOW_EMPTY_PASSWORD: ${ALLOW_EMPTY_PASSWORD}
    ports:
      - ${MONGODB_PORT_NUMBER}:${MONGODB_PORT_NUMBER}
